PROBLEMI PROPOSTI PER LA TESINA
1) I SEMAFORI (stradali)
    Classico incrocio a T con 4 semafori. Le macchine si accodano una dietro l'altra se il corrispondente semaforo
     e' rosso o giallo.
    Quando scatta il verde le macchine attraversano l'incrocio rispettando l'ordine di arrivo (quindi FIFO).
        //potrei gestire le 4 code con 4 array circolari, uno per ogni semaforo//
    Un'auto non puo' passare se quella che la precede non ha liberato l'incrocio.
    Un thread gestisce i semafori: ad esempio ogni 3 secondi setta il rosso sui semafori 0 e 1 ( i semafori
        sulla stessa strada, ad esempio la direzione verticale).
    Tutti gli altri threads (parametro passato in input) sono le auto.
    Opzionale --> l'incrocio puo essere attraversato al max da 4 auto contemporaneamente.
    Ogni auto esegue le seguenti routine:
        --> si accoda alle altre se trova il suo semaforo giallo o rosso.
        --> cotrolla se puo' attraversare ( se il semaforo e' verde ed e' la prima della coda).
        --> attraversa : (una semplice sleep (1) per simulare il transito.
        --> fine attraversamento.




2) Un processo mittente invia periodicamente messaggi di un tipo T, a tre processi
    riceventi (ricevente1, ricevente2, ricevente3). I messaggi inviati devono essere ricevuti (ovviuamente in
    ordine FIFO) da tutti e tre i processi riceventi.
    Il meccanismo di comunicazione e` costituito da una mailbox realizzata tramite un buffer circolare di N
    posizioni.
    a)  utilizzando il meccanismo semaforico, realizzare la precedente mailbox rispettando i seguenti criteri:
    a1) ogni messaggio deve essere ricevuto dai tre riceventi prima di essere eliminato dalla mailbox
        senza che debba essere previsto nessun ordine particolare fra i processi riceventi (ad esempio un
        messaggio puo` essere ricevuto prima da ricevente1, poi da ricevente3 e quindi da ricevente2
        mentre per altri messaggi puo` essere diverso l'ordine di ricezione da parte dei vari riceventi).
    a2) ripetere la soluzione ma con il vincolo che ogni messaggio deve essere ricevuto esattamenrte nel
        seguente ordine: prima da ricevente1, poi da ricevente2 e infine da ricevente3.

 Nella sezione Esercizi -> Monitor in pseudo-pascal del link http://didattica.agentgroup.unimo.it/didattica/psoNOD/
    ho scelto questi 2 esercizi

3) Esercizio del centro prelievi

4) Esercizio dell'autolavaggio



